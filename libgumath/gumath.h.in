/*
* BSD 3-Clause License
*
* Copyright (c) 2017-2018, plures
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
* 1. Redistributions of source code must retain the above copyright notice,
*    this list of conditions and the following disclaimer.
*
* 2. Redistributions in binary form must reproduce the above copyright notice,
*    this list of conditions and the following disclaimer in the documentation
*    and/or other materials provided with the distribution.
*
* 3. Neither the name of the copyright holder nor the names of its
*    contributors may be used to endorse or promote products derived from
*    this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


#ifndef GUMATH_H
#define GUMATH_H

#include "ndtypes.h"
#include "xnd.h"


#define GM_MAX_KERNELS

typedef void (* gm_c_kernel_t)(xnd_ndarray_t stack[], ndt_context_t *ctx);
typedef void (* gm_fortran_kernel_t)(xnd_ndarray_t stack[], ndt_context_t *ctx);
typedef void (* gm_strided_kernel_t)(xnd_ndarray_t stack[], ndt_context_t *ctx);
typedef void (* gm_xnd_kernel_t)(xnd_t stack[], ndt_context_t *ctx);

typedef struct {
    ndt_t *sig;

    gm_c_kernel_t C;
    gm_fortran_kernel_t Fortran;
    gm_strided_kernel_t Strided;
    gm_xnd_kernel_t Xnd;
} gm_kernel_t;

typedef struct {
    char *name;
    int size;
    gm_kernel_t kernels[];
} gm_func_t;


#endif /* GUMATH_H */
